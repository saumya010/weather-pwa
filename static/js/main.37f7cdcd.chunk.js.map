{"version":3,"sources":["api/fetchWeather.js","Components/Weather.js","App.js","index.js"],"names":["fetchWeather","query","a","axios","get","params","q","units","APPID","data","Weather","weather","className","name","sys","country","Math","round","main","temp","src","icon","alt","description","App","useState","city","setCity","setWeather","weatherClass","setWeatherClass","search","e","key","findWeatherClass","type","placeholder","value","onChange","target","onKeyPress","ReactDOM","render","document","getElementById"],"mappings":"uNAKaA,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACNC,IAAMC,IAJhB,kDAIyB,CACnCC,OAAQ,CACPC,EAAGL,EACHM,MAAO,SACPC,MAPa,sCAEY,uBACpBC,EADoB,EACpBA,KADoB,kBAQpBA,GARoB,2CAAH,sD,eCWVC,EAbC,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACjB,OACC,sBAAKC,UAAU,OAAf,UACC,qBAAIA,UAAU,YAAd,UAA0B,+BAAOD,EAAQE,OAAY,8BAAMF,EAAQG,IAAIC,aACvE,sBAAKH,UAAU,YAAf,UAA4BI,KAAKC,MAAMN,EAAQO,KAAKC,MAAM,4CAC1D,sBAAKP,UAAU,OAAf,UACC,qBAAKA,UAAU,YAAYQ,IAAG,4CAAuCT,EAAQA,QAAQ,GAAGU,KAA1D,WAAyEC,IAAKX,EAAQA,QAAQ,GAAGY,cAC/H,4BAAIZ,EAAQA,QAAQ,GAAGY,qBC4CZC,G,MAhDH,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACVC,EADU,KACJC,EADI,OAEaF,mBAAS,IAFtB,mBAEVd,EAFU,KAEDiB,EAFC,OAGuBH,mBAAS,IAHhC,mBAGVI,EAHU,KAGIC,EAHJ,KAYXC,EAAM,uCAAG,WAAOC,GAAP,eAAA9B,EAAA,yDACA,UAAV8B,EAAEC,IADQ,gCAEMjC,EAAa0B,GAFnB,OAEPjB,EAFO,OAGbmB,EAAWnB,GACXyB,EAAiBzB,GACjBkB,EAAQ,IALK,2CAAH,sDASNO,EAAmB,SAACzB,GACzB,IAAIU,EAAOV,EAAKS,KAAKC,KACjBgB,EAAO1B,EAAKE,QAAQ,GAAGO,KAE3BY,EADIX,EAAO,KAAgB,SAATgB,GAA4B,SAATA,GACrB,QACE,SAATA,EAAiC,QACxB,SAATA,EAAiC,OACrB,UAGtB,OACC,sBAAKvB,UAAW,kBAAkBiB,EAAlC,UACC,uBACCM,KAAO,OACPvB,UAAY,eACZwB,YAAc,SACdC,MAASX,EACTY,SAAa,SAACN,GAAD,OAAOL,EAAQK,EAAEO,OAAOF,QACrCG,WAAeT,IAEdpB,EAAQO,MACT,cAAC,EAAD,CAASN,UAAY,OAAOD,QAAWA,SC5C3C8B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.37f7cdcd.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.openweathermap.org/data/2.5/weather';\nconst API_KEY = 'd04dd6106c578d5e6256183a1b8279cf';\n\nexport const fetchWeather = async (query) => {\n\tconst {data} = await axios.get(URL, {\n\t\tparams: {\n\t\t\tq: query,\n\t\t\tunits: 'metric',\n\t\t\tAPPID: API_KEY\n\t\t}\n\t})\n\treturn data\n}\n","import React from 'react';\nimport './Weather.css';\n\nconst Weather = ({weather}) => {\n\treturn(\n\t\t<div className=\"city\">\n\t\t\t<h2 className=\"city-name\"><span>{weather.name}</span><sup>{weather.sys.country}</sup></h2>\n\t\t\t<div className=\"city-temp\">{Math.round(weather.main.temp)}<sup>&deg; C</sup></div>\n\t\t\t<div className=\"info\">\n\t\t\t\t<img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} alt={weather.weather[0].description} />\n\t\t\t\t<p>{weather.weather[0].description}</p>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Weather;\n","import React, { useState, useEffect } from 'react';\nimport { fetchWeather } from './api/fetchWeather'\nimport Weather from './Components/Weather'\n\nimport './App.css'\n\nconst App = () => {\n\tconst [city, setCity] = useState('')\n\tconst [weather, setWeather] = useState({})\n\tconst [weatherClass, setWeatherClass] = useState('')\n\n\t// useEffect(() => {\n\t// \tasync function fetchCity(city) {\n\t// \t\tconst data = await fetchWeather(city)\n\t// \t}\n\t// \tfetchCity(city)\n\t// }, [city])\n\n\tconst search = async (e) => {\n\t\tif( e.key === 'Enter' ) {\n\t\t\tconst data = await fetchWeather(city)\n\t\t\tsetWeather(data)\n\t\t\tfindWeatherClass(data)\n\t\t\tsetCity('')\n\t\t}\n\t}\n\n\tconst findWeatherClass = (data) => {\n\t\tlet temp = data.main.temp\n\t\tlet type = data.weather[0].main\n\t\tif( temp > 18 && (type !== 'Rain' || type !== 'Snow') )\n\t\tsetWeatherClass('sunny')\n\t\telse if( type === 'Rain') setWeatherClass('rainy')\n\t\telse if( type === 'Snow') setWeatherClass('snow')\n\t\telse setWeatherClass('clear')\n\t}\n\n\treturn(\n\t\t<div className={'main-container '+weatherClass}>\n\t\t\t<input\n\t\t\t\ttype = \"text\"\n\t\t\t\tclassName = \"search-input\"\n\t\t\t\tplaceholder = \"Search\"\n\t\t\t\tvalue = {city}\n\t\t\t\tonChange = { (e) => setCity(e.target.value) }\n\t\t\t\tonKeyPress = { search }\n\t\t\t/>\n\t\t\t{ weather.main && (\n\t\t\t\t<Weather className = \"city\" weather = {weather} />\n\t\t\t) }\n\t\t</div>\n\t)\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}